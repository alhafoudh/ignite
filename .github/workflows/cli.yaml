name: Compile CLI binaries
run-name: Add binaries to release ${{ github.event.release.tag_name }}
on:
  release:
    types:
      - created

jobs:
  upload:
    strategy:
      matrix:
        os: [windows]
    runs-on: ${{ matrix.os }}-latest
    name: Upload ${{ matrix.os }} binaries to release ${{ github.event.release.tag_name }}
    steps:
      - name: "Check is release"
        shell: bash
        run: |
          if [ -z "${{ github.event.release.tag_name }}" ]; then
            echo "This is not a release, skipping"
            exit 78
          fi
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      - name: compile and upload
        shell: bash
        run: |
          export TAG_NAME=${{ github.event.release.tag_name }}
          export BUILD_OS="$(uname -s)-$(uname -m)"
          cd $GITHUB_WORKSPACE
          dart pub get
          dart analyze
          dart compile exe bin/ignite.dart
          chmod +x bin/ignite.exe
          cd bin/
          gh release upload $TAG_NAME ignite.exe
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
